lgmt=1,LiangGeManTou
ydzclgmt=1,yidunzhichilianggemantou%9732
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  Git命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 
gs=1,git status
ga=1,git add .
gc=1,git clone 
; 克隆某一个分支
gcb=1,git clone -b 
; 提交并合并到当前分支
gcma=1,git commit --amend
; 提交
gcm=1,git commit
; 提交并给出信息
gcmm=1,git commit -m ''
; ;;;;;;;;;;;;;;;;;;;;  推送命令   ;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 推送到主分支
gpom=1,git push origin master
; 推送到主分支后退出
gpome=1,git push origin master && exit
; 推送到src分支
gpos=1,git push origin src
; 推送到src分支后退出
gpose=1,git push origin src && exit
; 强制推送到主分支
gpfom=1,git push -f origin master
; 强制推送到src分支
gpfos=1,git push -f origin src
; 拉起主分支
gplom=1,git pull origin master
; 拉入src分支
gplos=1,git pull origin src
; 强制拉去远程分支
gplfos=1,git pull -f origin src
gplfom=1,git pull -f origin master
; 显示提交记录
glpo=1,git log --pretty=oneline 
glpot=1,git log --pretty=oneline -10
glgo=1,git log --graph --oneline 
; 比较不同
gd=1,git diff
; 比较两个文件的不同
gdf=1,git diff -- filePath oldCommitId newCommitId
gf=1,git fetch
; 下载远程的主分支到tmp分支上
gfomt=1,git fetch origin master:tmp
; 下载远程的src分支到tmp分支上
gfost=1,git fetch origin src:tmp
; 合并分支
gm=1,git merge
; 查看当前分支
gb=1,git branch
; 查看所有的分支
gba=1,git branch -a
; 删除分支
gbd=1,git branch -d
; 重命名分支
gbm=1,git branch -m
; 
gu=1,lanlan2017
; 撤销 git add
grt=1,git restore 
grta=1,git restore . 
; 转到指定版本,不改变工作区
grss=1,git reset --soft 
; 回退到指定版本,改变工作区
grsh=1,git reset --hard 
; 撤销git add的操作
grts=1,git restore --staged 
; 显示远程信息
grmv=1,git remote -v
; 添加远程仓库
grma=1,git remote add 
; 删除远程仓库
grmrm=1,git remote remove 
grmrmo=1,git remote remove origin
; 压缩comment
grb=1,git rebase 
; 从当前压缩到指定版本
grbi=1,git rebase -i
; 从当前向后压缩指定次数 
grbih=1,git rebase -i HEAD~
; 继续压缩
grbc=1,git rebase --continue
; git提交记录数
grlac=1,git rev-list --all --count
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  JavaScript代码    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 控制台输出
conl=1,console.log();
fun=1,function  Name(){}
docgebi=1,document.getElementById();
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  Java代码    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 常用输出语句
sout=1,System.out.println();
; 常用单词
cont=3,Controller
domain=3,domain
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  Linux命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; cd命令
cddd=1,cd ..
cdddd=1,cd ../..
cddddd=1,cd ../../..
cdh=1,cd ~
cdb=1,cd ~/blog/blog/
cdbr=1,cd ~/blog/blogRoot/
cdex=1,cd ~/blog/exam/
cdrn=1,cd ~/blog/ReadingNotes/
cdmyb=1,cd ~/my/blog/
cdmybr=1,cd ~/my/blogRoot/
cdmyj=1,cd ~/my/JavaReadingNotes/
cdmyrn=1,cd ~/my/ReadingNotes/
cdmyex=1,cd ~/my/exam/
; ls命令
ls=1,ls
lsa=1,ls -a
lsal=1,ls -al
; rm命令
rm=1,rm
rmr=1,rm -r
rmrf=1,rm -rf
chmx=1,chmod +x
; 退出
ex=1,exit
chm=1,chmod
; 创建目录
mk=1,mkdir
sh=1,sh
shd=1,./
; 创建文件
tou=1,touch 
; npm安装
npmi=1,npm install
npmis=1,npm install --save
; npm卸载
npmui=1,npm uninstall --save
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  cmd命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 文件资源管理器
exp=1,explorer 
; 输出JAVA_HOME
ejh=1,echo %JAVA_HOME% 
; 在当前终端界面 临时设置JAVA_HOME
setjh=1,set JAVA_HOME=%JAVA_HOME_% 
; 临时使用Java9
setpjn=1,set path=E:\java\java9\jdk-9\bin;%path%
; 变异指定编码的Java文件
jcen=1,javac -encoding 
; 变异utf-8编码的Java文件
jcenut=1,javac -encoding utf-8 
; 显示Java项目目录结果
mytreejc=1,mytree java|clip&&html dp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  latex命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 行内公式
lats=1,$
; 行间公式
latss=1,$$
; 下划线
latul=1,\underline{}
; 文本
latb=1,\textbf{}
; 点号
latddd=1,\cdots
; 大括号
latdkh=1,\lbrace \rbrace
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  Markdown命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 加粗
mb=1,****
; 行内代码
mk=1,``
; 无序列表
mu=1,- 
; 引用
mq=1,> 
; 有序列表 
mo=1,1. 
; 二级标题
mh=1,## 
mhh=1,### 
mhhh=1,#### 
mhhhh=1,##### 
mhhhhh=1,###### 
mhhhhhh=1,####### 
mmath=1,mathjax: true
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  HTML标签    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; link标签
linkcss=1,<link rel="stylesheet" type="text/css" href="" />
scriptsrc=1,<script type="text/javascript" src=""></script>
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  sql命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
sqlsd=1,show databases;
sqluc=1,use cinemabookingsystem;
sqlst=1,show tables;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  其他    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ert=1,E-R图
atpm=1,@protonmail.com
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   多行短语    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 默认代码块
; ```
; 
; ```
mcb=1,```$(CRLF)$(CRLF)```
; java代码块
; ```java
; 
; ```
mcbj=1,```java$(CRLF)$(CRLF)```
; JS代码块
; ```javascript
; 
; ```
mcbjs=1,```javascript$(CRLF)$(CRLF)```
; HTML代码块
; ```html
; 
; ```
mcbh=1,```html$(CRLF)$(CRLF)```
; CSS代码块
; ```css
; 
; ```
mcbcss=1,```css$(CRLF)$(CRLF)```
; C语言代码块
; ```css
; 
; ```
mcbc=1,```c$(CRLF)$(CRLF)```
; HTML稳定基本标签
; <html>
;     <head>
;         <meta charset="utf-8">
;         <style type="text/css">
;         </style>
;         <script>
;         </script>
;     </head>
;     <body>
;     </body>
; </html>
ht=1,<html>$(CRLF)    <head>$(CRLF)        <meta charset="utf-8">$(CRLF)        <style type="text/css">$(CRLF)        </style>$(CRLF)        <script>$(CRLF)        </script>$(CRLF)    </head>$(CRLF)    <body>$(CRLF)    </body>$(CRLF)</html>
; Java类定义
; public class {
; 
; }
classj=1,public class {$(CRLF)$(CRLF)}$(CRLF)
; main方法定义
; public static void main(String[] args){
; 
; }
main=1,public static void main(String[] args){$(CRLF)$(CRLF)}
; main方法定义
; public static void main(String[] args){
; 
; }
psvm=1,public static void main(String[] args){$(CRLF)$(CRLF)}$(CRLF)
; 接触B站鼠标复制限制
; document.querySelector('div.article-holder').classList.remove('unable-reprint');
; document.querySelector('div.article-holder').addEventListener('copy',function(e){
;     e.clipboardData.setData("text",window.getSelection().toString())
; });
bzfz=1,document.querySelector('div.article-holder').classList.remove('unable-reprint');$(CRLF)document.querySelector('div.article-holder').addEventListener('copy',function(e){$(CRLF)    e.clipboardData.setData("text",window.getSelection().toString())$(CRLF)});
; 冒泡排序JS版本
; var array = [3, 4, 1, 2];
; console.log("排序前:" + array);
; function bubbleSort(array) {
;     var temp = 0;
;     for (var i = 0; i < array.length - 1; i++) {
;         for (var j = 0; j < array.length - 1 - i; j++) {
;             // 如果后面的比前面的大
;             if (array[j] < array[j + 1]) {
;                 // 将小的数缓存
;                 temp = array[j];
;                 // 将 大的 数放到前面
;                 array[j] = array[j + 1];
;                 // 将 小的 数放到后面
;                 array[j + 1] = temp;
;             }
;         }
;     }
;     return array;
; }
; var sortarray = bubbleSort(array);
; console.log("排序后:" + sortarray);
maopao=1,var array = [3, 4, 1, 2];$(CRLF)console.log("排序前:" + array);$(CRLF)function bubbleSort(array) {$(CRLF)    var temp = 0;$(CRLF)    for (var i = 0; i < array.length - 1; i++) {$(CRLF)        for (var j = 0; j < array.length - 1 - i; j++) {$(CRLF)            // 如果后面的比前面的大$(CRLF)            if (array[j] < array[j + 1]) {$(CRLF)                // 将小的数缓存$(CRLF)                temp = array[j];$(CRLF)                // 将 大的 数放到前面$(CRLF)                array[j] = array[j + 1];$(CRLF)                // 将 小的 数放到后面$(CRLF)                array[j + 1] = temp;$(CRLF)            }$(CRLF)        }$(CRLF)    }$(CRLF)    return array;$(CRLF)}$(CRLF)var sortarray = bubbleSort(array);$(CRLF)console.log("排序后:" + sortarray);$(CRLF)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   Termux命令    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 全部更新所有的
; cd ~/blog/blog/
; git pull origin master
; cd ~/my/blog/
; git pull origin master
; cd ~/blog/blogRoot/
; git pull origin src
; cd ~/my/blogRoot/
; git pull origin src
; cd ~/my/JavaReadingNotes/
; git pull origin master
; cd ~/blog/JavaReadingNotes/
; git pull origin master
; cd ~/my/ReadingNotes/
; git pull origin master
; cd ~/blog/ReadingNotes/
; git pull origin master
; cd ~/blog/exam/
; git pull origin master
tuall=1,cd ~/blog/blog/$(CRLF)git pull origin master$(CRLF)cd ~/my/blog/$(CRLF)git pull origin master$(CRLF)cd ~/blog/blogRoot/$(CRLF)git pull origin src$(CRLF)cd ~/my/blogRoot/$(CRLF)git pull origin src$(CRLF)cd ~/my/JavaReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/blog/JavaReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/my/ReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/blog/ReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/blog/exam/$(CRLF)git pull origin master
; 更新blog站点
; cd ~/blog/blog/
; git pull origin master
; cd ~/my/blog/
; git pull origin master
tub=1,cd ~/blog/blog/$(CRLF)git pull origin master$(CRLF)cd ~/my/blog/$(CRLF)git pull origin master$(CRLF)
; 更新主站点
; cd ~/blog/blogRoot/
; git pull origin src
; cd ~/my/blogRoot/
; git pull origin src
tubr=1,cd ~/blog/blogRoot/$(CRLF)git pull origin src$(CRLF)cd ~/my/blogRoot/$(CRLF)git pull origin src$(CRLF)
; 更新Java读书笔记
; cd ~/my/JavaReadingNotes/
; git pull origin master
; cd ~/blog/JavaReadingNotes/
; git pull origin master
tujrn=1,cd ~/my/JavaReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/blog/JavaReadingNotes/$(CRLF)git pull origin master$(CRLF)
; 更新读书笔记
; cd ~/my/ReadingNotes/
; git pull origin master
; cd ~/blog/ReadingNotes/
; git pull origin master
turn=1,cd ~/my/ReadingNotes/$(CRLF)git pull origin master$(CRLF)cd ~/blog/ReadingNotes/$(CRLF)git pull origin master$(CRLF)
; 更新笔试题
; cd ~/blog/exam/
; git pull origin master
tuex=1,cd ~/blog/exam/$(CRLF)git pull origin master